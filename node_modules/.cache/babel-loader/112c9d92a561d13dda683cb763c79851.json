{"ast":null,"code":"import { AllPosts, GetSinglePost, CreatePost, UpdatePost } from '../services/PostService';\nexport const getAllPosts = () => dispatch => {\n  AllPosts().then(res => {\n    if (res.success) {\n      dispatch({\n        type: 'LOAD_POSTS',\n        res\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: 'CODE_ERROR',\n      error\n    });\n  });\n};\nexport const addPost = (postData, media) => dispatch => {\n  CreatePost(postData).then(res => {\n    if (res.success) {\n      dispatch({\n        type: 'ADD_POST',\n        res\n      });\n      return res;\n    }\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: 'CODE_ERROR',\n      error\n    });\n  });\n};\nexport const getPost = postId => dispatch => {\n  GetSinglePost(postId).then(res => {\n    if (res.success) {\n      console.log('success');\n      dispatch({\n        type: 'GET_SINGLE_POST',\n        res\n      });\n    }\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: 'CODE_ERROR',\n      error\n    });\n  });\n};\nexport const updatePost = (postData, postId) => dispatch => {\n  UpdatePost(postData, postId).then(res => {\n    if (res.success) {\n      console.log(res);\n      dispatch({\n        type: 'UPDATE_POST',\n        res\n      });\n      return res;\n    }\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: 'CODE_ERROR',\n      error\n    });\n  });\n};","map":{"version":3,"sources":["/var/www/html/socialsharing/src/store/actions/PostAction.js"],"names":["AllPosts","GetSinglePost","CreatePost","UpdatePost","getAllPosts","dispatch","then","res","success","type","catch","error","console","log","addPost","postData","media","getPost","postId","updatePost"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,UAA9C,QAAgE,yBAAhE;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC9CL,EAAAA,QAAQ,GAAGM,IAAX,CAAgBC,GAAG,IAAI;AACtB,QAAGA,GAAG,CAACC,OAAP,EAAe;AACdH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,YAAN;AAAoBF,QAAAA;AAApB,OAAD,CAAR;AACA;AACD,GAJD,EAMEG,KANF,CAMQC,KAAK,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,YAAN;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACA,GATD;AAUA,CAXM;AAaP,OAAO,MAAMG,OAAO,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAsBX,QAAD,IAAc;AACzDH,EAAAA,UAAU,CAACa,QAAD,CAAV,CAAqBT,IAArB,CAA0BC,GAAG,IAAI;AAChC,QAAGA,GAAG,CAACC,OAAP,EAAe;AACdH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,UAAN;AAAkBF,QAAAA;AAAlB,OAAD,CAAR;AAEA,aAAOA,GAAP;AACA;AACD,GAND,EAQEG,KARF,CAQQC,KAAK,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,YAAN;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACA,GAXD;AAYA,CAbM;AAeP,OAAO,MAAMM,OAAO,GAAIC,MAAD,IAAab,QAAD,IAAc;AAChDJ,EAAAA,aAAa,CAACiB,MAAD,CAAb,CAAsBZ,IAAtB,CAA2BC,GAAG,IAAI;AACjC,QAAGA,GAAG,CAACC,OAAP,EAAe;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,iBAAN;AAAyBF,QAAAA;AAAzB,OAAD,CAAR;AACA;AACD,GALD,EAOEG,KAPF,CAOQC,KAAK,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,YAAN;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAMQ,UAAU,GAAG,CAACJ,QAAD,EAAWG,MAAX,KAAuBb,QAAD,IAAc;AAC7DF,EAAAA,UAAU,CAACY,QAAD,EAAWG,MAAX,CAAV,CAA6BZ,IAA7B,CAAkCC,GAAG,IAAI;AACxC,QAAGA,GAAG,CAACC,OAAP,EAAe;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACAF,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,aAAN;AAAqBF,QAAAA;AAArB,OAAD,CAAR;AAEA,aAAOA,GAAP;AACA;AACD,GAPD,EASEG,KATF,CASQC,KAAK,IAAI;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,YAAN;AAAoBE,MAAAA;AAApB,KAAD,CAAR;AACA,GAZD;AAaA,CAdM","sourcesContent":["import { AllPosts, GetSinglePost, CreatePost, UpdatePost } from '../services/PostService';\n\nexport const getAllPosts = () => (dispatch) => {\n\tAllPosts().then(res => {\n\t\tif(res.success){\n\t\t\tdispatch({type:'LOAD_POSTS', res})\n\t\t}\n\t}\n\n\t).catch(error => {\n\t\tconsole.log(error)\n\t\tdispatch({type:'CODE_ERROR', error})\n\t});\n}\n\nexport const addPost = (postData, media) => (dispatch) => {\n\tCreatePost(postData).then(res => {\n\t\tif(res.success){\n\t\t\tdispatch({type:'ADD_POST', res})\n\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t).catch(error => {\n\t\tconsole.log(error)\n\t\tdispatch({type:'CODE_ERROR', error})\n\t});\n}\n\nexport const getPost = (postId) => (dispatch) => {\n\tGetSinglePost(postId).then(res => {\n\t\tif(res.success){\n\t\t\tconsole.log('success')\n\t\t\tdispatch({type:'GET_SINGLE_POST', res})\n\t\t}\n\t}\n\n\t).catch(error => {\n\t\tconsole.log(error)\n\t\tdispatch({type:'CODE_ERROR', error})\n\t});\n}\n\nexport const updatePost = (postData, postId) => (dispatch) => {\n\tUpdatePost(postData, postId).then(res => {\n\t\tif(res.success){\n\t\t\tconsole.log(res)\n\t\t\tdispatch({type:'UPDATE_POST', res})\n\n\t\t\treturn res;\n\t\t}\n\t}\n\n\t).catch(error => {\n\t\tconsole.log(error)\n\t\tdispatch({type:'CODE_ERROR', error})\n\t});\n}"]},"metadata":{},"sourceType":"module"}