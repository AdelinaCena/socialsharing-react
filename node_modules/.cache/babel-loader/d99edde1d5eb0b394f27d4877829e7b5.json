{"ast":null,"code":"var _jsxFileName = \"/var/www/html/socialsharing/src/pages/post/edit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport ReactDOMServer from 'react-dom/server';\nimport { getPost, updatePost } from '../../store/actions/PostAction';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport '../../css/post.css';\nimport { File } from '../../components/File';\nimport Grid from '@material-ui/core/Grid';\n\nclass edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.updatePost(this.state, this.props.match.params.post);\n      this.props.history.push('/');\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.post);\n  }\n\n  render() {\n    const {\n      post\n    } = this.props.singlePost;\n    const {\n      media\n    } = this.props.singlePost;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"styles.form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      className: \"posts-view\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-post-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      value: this.state ? this.state.title : post.title,\n      fullWidth: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"maximum width\",\n      name: \"text\",\n      label: \"Text\",\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      },\n      rowsMin: \"10\",\n      value: this.state ? this.state.text : post.text,\n      onChange: this.handleChange,\n      placeholder: \"Text here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, \" Add Files \"), /*#__PURE__*/React.createElement(Dropzone, {\n      onChangeStatus: this.handleChangeStatus,\n      accept: \"image/*,audio/*,video/*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"post-button\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Update post\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grave\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Post Media\"), media ? media.map(row => /*#__PURE__*/React.createElement(File, {\n      file: row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    })) : null)));\n  }\n\n}\n\nconst mapStatesToProps = state => {\n  return {\n    singlePost: state.post\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPost: postId => dispatch(getPost(postId)),\n    updatePost: (post, postId) => dispatch(updatePost(post, postId))\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(edit);","map":{"version":3,"sources":["/var/www/html/socialsharing/src/pages/post/edit.js"],"names":["React","Component","connect","TextField","TextareaAutosize","Button","ReactDOMServer","getPost","updatePost","Dropzone","File","Grid","edit","constructor","props","handleSubmit","e","preventDefault","state","match","params","post","history","push","handleChange","setState","target","name","value","componentDidMount","render","singlePost","media","title","width","marginTop","text","handleChangeStatus","map","row","mapStatesToProps","mapDispatchToProps","dispatch","postId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { getPost, updatePost } from '../../store/actions/PostAction';\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\nimport '../../css/post.css'\r\nimport  { File } from  '../../components/File'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass edit extends Component {\r\n    \r\n\tconstructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.getPost(this.props.match.params.post);\r\n\t}\r\n    \r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.updatePost(this.state, this.props.match.params.post);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] :e.target.value\r\n\t\t});\r\n\t}\r\n\r\n    render() {\r\n\r\n        const { post } = this.props.singlePost \r\n        const { media } = this.props.singlePost\r\n        \r\n\t    return (\r\n            <Grid container className=\"styles.form\">\r\n                <Grid item sm={8} xs={12} className=\"posts-view\">\r\n                    <div className=\"edit-post-form\">\r\n                        <h3>Edit Post</h3>\r\n                        <form noValidate autoComplete=\"off\">\r\n                            <TextField \r\n                                id=\"email\" name=\"title\" type=\"text\" \r\n                                label=\"Title\"\r\n                                value={this.state ? this.state.title : post.title} \r\n                                fullWidth \r\n                                onChange={this.handleChange}/>\r\n                            <TextareaAutosize \r\n                                    aria-label=\"maximum width\" \r\n                                    name=\"text\" \r\n                                    label=\"Text\"\r\n                                    style={{width: '100%', marginTop:'10px'}}\r\n                                    rowsMin=\"10\"\r\n                                    value={this.state ? this.state.text : post.text}\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Text here\" />\r\n                            <div> \r\n                                <h3> Add Files </h3>\r\n                                <Dropzone\r\n                                    onChangeStatus={this.handleChangeStatus}\r\n                                    accept=\"image/*,audio/*,video/*\"/>\r\n                                </div>    \r\n                            <Button  className= \"post-button\" variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n                                Update post\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <div className=\"grave\"> \r\n                        <h3>Post Media</h3>\r\n                            {media? media.map(row => (\r\n                                <File  file={row} />\r\n                            )) : null }\r\n                    </div> \r\n                     \r\n                </Grid>\r\n            </Grid>\r\n           \r\n        );\r\n\t}\r\n\r\n}\r\n\r\nconst mapStatesToProps = (state) => {\r\n\treturn {\r\n        singlePost : state.post\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        getPost:(postId) => dispatch(getPost(postId)),\r\n        updatePost:(post, postId) => dispatch(updatePost(post, postId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(edit)"]},"metadata":{},"sourceType":"module"}