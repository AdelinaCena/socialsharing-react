{"ast":null,"code":"var _jsxFileName = \"/var/www/html/socialsharing/src/components/MyUploader.js\";\nimport React, { createRef, useState, Component } from 'react';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader'; // preview component\n\nconst Preview = ({\n  meta\n}) => {\n  const {\n    name,\n    percent,\n    status,\n    previewUrl\n  } = meta;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"preview-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: previewUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 32\n    }\n  }, name), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 71\n    }\n  }, status), status !== \"done\" && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 133\n    }\n  }, \" (\", Math.round(percent), \"%)\"));\n};\n\nfunction MyUploader() {\n  // specify upload params and API url to file upload\n  const getUploadParams = ({\n    file\n  }) => {\n    const body = new FormData();\n    body.append('dataFiles', file);\n    return {\n      url: 'http://localhost:4000/public',\n      body\n    };\n  }; // handle the status of the file upload\n\n\n  const handleChangeStatus = ({\n    xhr\n  }) => {\n    if (xhr) {\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          const result = JSON.parse(xhr.response);\n          console.log(result);\n        }\n      };\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Drag and Drop file upload - \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.cluemediator.com\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 39\n    }\n  }, \"Clue Mediator\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    styles: {\n      dropzone: {\n        overflow: 'auto',\n        border: '1px solid #999',\n        background: '#f5f5f5'\n      },\n      inputLabelWithFiles: {\n        margin: '20px 3%'\n      }\n    },\n    canRemove: false,\n    PreviewComponent: Preview,\n    accept: \"image/*,audio/*,video/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default MyUploader;","map":{"version":3,"sources":["/var/www/html/socialsharing/src/components/MyUploader.js"],"names":["React","createRef","useState","Component","Dropzone","Preview","meta","name","percent","status","previewUrl","Math","round","MyUploader","getUploadParams","file","body","FormData","append","url","handleChangeStatus","xhr","onreadystatechange","readyState","result","JSON","parse","response","console","log","dropzone","overflow","border","background","inputLabelWithFiles","margin"],"mappings":"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","sourcesContent":["import React, {createRef, useState, Component } from 'react'\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\nimport Dropzone from 'react-dropzone-uploader';\r\n \r\n// preview component\r\nconst Preview = ({ meta }) => {\r\n  const { name, percent, status, previewUrl } = meta;\r\n  return (\r\n    <div className=\"preview-box\">\r\n      <img src={previewUrl} /> <span className=\"name\">{name}</span> - <span className=\"status\">{status}</span>{status !== \"done\" && <span className=\"percent\"> ({Math.round(percent)}%)</span>}\r\n    </div>\r\n  )\r\n}\r\n \r\nfunction MyUploader() {\r\n \r\n  // specify upload params and API url to file upload\r\n  const getUploadParams = ({ file }) => {\r\n    const body = new FormData();\r\n    body.append('dataFiles', file);\r\n    return { url: 'http://localhost:4000/public', body }\r\n  }\r\n \r\n  // handle the status of the file upload\r\n  const handleChangeStatus = ({ xhr }) => {\r\n    if (xhr) {\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState === 4) {\r\n          const result = JSON.parse(xhr.response);\r\n          console.log(result);\r\n        }\r\n      }\r\n    }\r\n  }\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <h3>Drag and Drop file upload - <a href=\"https://www.cluemediator.com\" target=\"_blank\" rel=\"noopener noreferrer\">Clue Mediator</a></h3>\r\n      <div>\r\n        <Dropzone\r\n          getUploadParams={getUploadParams}\r\n          onChangeStatus={handleChangeStatus}\r\n          styles={{\r\n            dropzone: { overflow: 'auto', border: '1px solid #999', background: '#f5f5f5' },\r\n            inputLabelWithFiles: { margin: '20px 3%' }\r\n          }}\r\n          canRemove={false}\r\n          PreviewComponent={Preview}\r\n          accept=\"image/*,audio/*,video/*\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default (MyUploader)\r\n"]},"metadata":{},"sourceType":"module"}