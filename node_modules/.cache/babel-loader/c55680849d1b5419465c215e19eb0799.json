{"ast":null,"code":"var _jsxFileName = \"/var/www/html/socialsharing/src/pages/post/create.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport { addPost } from '../../store/actions/PostAction';\nimport MyUploader from '../../components/MyUploader';\n\nclass create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.addPost(this.state);\n      this.props.history.push('/');\n    };\n\n    this.resetForm = e => {\n      this.setState({\n        title: '',\n        text: '',\n        media: []\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.componentDidMount = async () => {};\n\n    this.state = {\n      title: '',\n      text: '',\n      media: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      value: this.state.title,\n      fullWidth: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"maximum width\",\n      name: \"text\",\n      label: \"Text\",\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      },\n      rowsMin: \"10\",\n      value: this.state.text,\n      onChange: this.handleChange,\n      placeholder: \"Text here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Multiple files\"), /*#__PURE__*/React.createElement(Dropzone, {\n      style: dropzoneStyle,\n      accept: \"image/*\",\n      onDrop: acceptedFiles => {\n        // do nothing if no files\n        if (acceptedFiles.length === 0) {\n          return;\n        } // on drop we add to the existing files\n\n\n        setFieldValue(\"attachments\", values.attachments.concat(acceptedFiles));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, ({\n      isDragActive,\n      isDragReject,\n      acceptedFiles,\n      rejectedFiles\n    }) => {\n      if (isDragActive) {\n        return \"This file is authorized\";\n      }\n\n      if (isDragReject) {\n        return \"This file is not authorized\";\n      }\n\n      if (values.attachments.length === 0) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 30\n          }\n        }, \"Try dragging a file here!\");\n      }\n\n      return values.attachments.map((file, i) => /*#__PURE__*/React.createElement(Thumb, {\n        key: i,\n        file: file,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 65\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(MyUploader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: '10px'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Add post\")));\n  }\n\n}\n\nconst mapStatesToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: postObject => dispatch(addPost(postObject))\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(create);","map":{"version":3,"sources":["/var/www/html/socialsharing/src/pages/post/create.js"],"names":["React","Component","connect","TextField","TextareaAutosize","Button","addPost","MyUploader","create","constructor","props","handleSubmit","e","preventDefault","state","history","push","resetForm","setState","title","text","media","handleChange","target","name","value","componentDidMount","bind","render","width","marginTop","dropzoneStyle","acceptedFiles","length","setFieldValue","values","attachments","concat","isDragActive","isDragReject","rejectedFiles","map","file","i","mapStatesToProps","mapDispatchToProps","dispatch","postObject"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { addPost } from '../../store/actions/PostAction';\r\nimport MyUploader from '../../components/MyUploader'\r\n\r\n\r\nclass create extends Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            text: '',\r\n            media: []\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    \r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        this.props.addPost(this.state);\r\n\r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    resetForm = (e) => {\r\n        this.setState({\r\n            title: '',\r\n            text : '',\r\n            media: []\r\n        })\r\n    }\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] :e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount = async() => {\r\n\t}\r\n\r\n    render() {\r\n\t    return (\r\n            <>\r\n            <form noValidate autoComplete=\"off\">\r\n                <TextField \r\n                    id=\"email\" name=\"title\" type=\"text\" \r\n                    label=\"Title\"\r\n                    value={this.state.title} \r\n                    fullWidth \r\n                    onChange={this.handleChange}/>\r\n                <TextareaAutosize \r\n                        aria-label=\"maximum width\" \r\n                        name=\"text\" \r\n                        label=\"Text\"\r\n                        style={{width: '100%', marginTop:'10px'}}\r\n                        rowsMin=\"10\"\r\n                        value={this.state.text}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Text here\" />\r\n              <div className=\"form-group\">\r\n                <label>Multiple files</label>\r\n                <Dropzone style={dropzoneStyle} accept=\"image/*\" onDrop={(acceptedFiles) => {\r\n                  // do nothing if no files\r\n                  if (acceptedFiles.length === 0) { return; }\r\n\r\n                  // on drop we add to the existing files\r\n                  setFieldValue(\"attachments\", values.attachments.concat(acceptedFiles));\r\n                }}>\r\n                  {({ isDragActive, isDragReject, acceptedFiles, rejectedFiles }) => {\r\n                    if (isDragActive) {\r\n                      return \"This file is authorized\";\r\n                    }\r\n\r\n                    if (isDragReject) {\r\n                      return \"This file is not authorized\";\r\n                    }\r\n\r\n                    if (values.attachments.length === 0) {\r\n                      return <p>Try dragging a file here!</p>\r\n                    }\r\n\r\n                    return values.attachments.map((file, i) => (<Thumb key={i} file={file} />));\r\n                  }}\r\n                </Dropzone>\r\n              </div>\r\n              \r\n            <MyUploader />\r\n                <Button  style={{marginTop: '10px'}} variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n                    Add post\r\n                </Button>\r\n            </form>\r\n\r\n            </>\r\n        );\r\n\t}\r\n\r\n}\r\n\r\nconst mapStatesToProps = (state) => {\r\n\treturn {\r\n\t};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddPost:(postObject) => dispatch(addPost(postObject))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(create)"]},"metadata":{},"sourceType":"module"}