{"ast":null,"code":"var _jsxFileName = \"/var/www/html/socialsharing/src/pages/home.js\";\nimport React, { Component } from 'react';\nimport { Post } from '../components/Post';\nimport { getAllPosts } from '../store/actions/PostAction'; // redux\n\nimport { connect } from 'react-redux';\n\nclass home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.props.getAllPosts();\n      console.log(this.props);\n    };\n  }\n\n  render() {\n    const {\n      loadPosts\n    } = this.props;\n    const posts = [{\n      id: 1,\n      title: 'Hello World',\n      content: 'Welcome to learning React!'\n    }, {\n      id: 2,\n      title: 'Installation',\n      content: 'You can install React from npm.'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, loadPosts && loadPosts.hasOwnProperty('allPosts') ? loadPosts.allPosts.map(row => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \" row.id \")) : null, /*#__PURE__*/React.createElement(Post, {\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllPosts: () => dispatch(getAllPosts())\n  };\n};\n\nconst mapStatesToProps = state => {\n  return {\n    loadPosts: state.post.loadPosts\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(home);","map":{"version":3,"sources":["/var/www/html/socialsharing/src/pages/home.js"],"names":["React","Component","Post","getAllPosts","connect","home","constructor","props","componentDidMount","console","log","render","loadPosts","posts","id","title","content","hasOwnProperty","allPosts","map","row","mapDispatchToProps","dispatch","mapStatesToProps","state","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,WAAT,QAA4B,6BAA5B,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAInBC,iBAJmB,GAIC,YAAW;AAC9B,YAAM,KAAKD,KAAL,CAAWJ,WAAX,EAAN;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,KAPkB;AAElB;;AAOEI,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;AAEH,UAAMM,KAAK,GAAG,CACZ;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,aAAf;AAA8BC,MAAAA,OAAO,EAAE;AAAvC,KADY,EAEZ;AAACF,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,KAAK,EAAE,cAAf;AAA+BC,MAAAA,OAAO,EAAE;AAAxC,KAFY,CAAd;AAIG,wBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEJ,SAAS,IAAIA,SAAS,CAACK,cAAV,CAAyB,UAAzB,CAAb,GAAmDL,SAAS,CAACM,QAAV,CAAmBC,GAAnB,CAAuBC,GAAG,iBAC7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADmD,CAAnD,GAEK,IAHP,eAKI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFD;AAUH;;AA3B2B;;AAgC7B,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNnB,IAAAA,WAAW,EAAC,MAAMmB,QAAQ,CAACnB,WAAW,EAAZ;AADpB,GAAP;AAGA,CAJD;;AAMA,MAAMoB,gBAAgB,GAAIC,KAAD,IAAW;AACnC,SAAO;AACFZ,IAAAA,SAAS,EAACY,KAAK,CAACC,IAAN,CAAWb;AADnB,GAAP;AAGA,CAJD;;AAMA,eAAeR,OAAO,CAACmB,gBAAD,EAAmBF,kBAAnB,CAAP,CAA8ChB,IAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Post } from '../components/Post';\nimport { getAllPosts } from '../store/actions/PostAction';\n// redux\nimport { connect } from 'react-redux'\n\nclass home extends Component {\n\tconstructor(props) {\n\t    super(props);\n\t}\n\n\tcomponentDidMount = async() => {\n\t\tawait this.props.getAllPosts();\n\t\tconsole.log(this.props);\n\t}\n\n    render() {\n    \tconst { loadPosts } = this.props;\n\n\t\tconst posts = [\n\t\t  {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n\t\t  {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n\t\t];\n\t    return (\n\n\t\t    <div> \n\t\t    \t{loadPosts && loadPosts.hasOwnProperty('allPosts')? loadPosts.allPosts.map(row => (\n\t\t    \t\t<p> row.id </p> \n\t\t    \t\t)) : null }\n\n\t\t        <Post posts={posts}/>\n\t\t    </div>\n\t    );\n\t}\n\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tgetAllPosts:() => dispatch(getAllPosts())\n\t}\n}\n\nconst mapStatesToProps = (state) => {\n\treturn { \n\t\t    loadPosts:state.post.loadPosts\n\t\t};\n}\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(home)"]},"metadata":{},"sourceType":"module"}