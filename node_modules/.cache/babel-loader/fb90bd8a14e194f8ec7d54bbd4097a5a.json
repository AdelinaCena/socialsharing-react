{"ast":null,"code":"import { SignUpService, LoginService, LogoutService } from '../services/AuthService';\nimport { Route, Redirect } from 'react-router-dom';\nexport const signUp = (credentials, history) => {\n  return dispatch => {\n    SignUpService(credentials, history).then(res => {\n      if (res.success) {\n        localStorage.setItem(\"user\", 'Bearer ' + res.token);\n        localStorage.setItem(\"user_id\", res.user_id);\n        history.push(\"/\");\n        dispatch({\n          type: 'SIGNUP_SUCCESS',\n          res\n        });\n      } else {\n        dispatch({\n          type: 'SIGNUP_ERROR',\n          res\n        });\n      }\n    }).catch(error => {\n      dispatch({\n        type: 'CODE_ERROR',\n        error\n      });\n    });\n  };\n};\nexport const loginUser = (credentials, history) => {\n  return dispatch => {\n    LoginService(credentials, history).then(res => {\n      if (res.success) {\n        localStorage.setItem(\"user\", 'Bearer ' + res.token);\n        localStorage.setItem(\"user_id\", res.user_id);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          res\n        });\n        history.push(\"/\");\n      } else {\n        dispatch({\n          type: 'LOGIN_ERROR',\n          res\n        });\n      }\n    });\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    LogoutService().then(res => {\n      if (res.success) {\n        dispatch({\n          type: 'LOGOUT_SUCCESS'\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/socialsharing/src/store/actions/AuthAction.js"],"names":["SignUpService","LoginService","LogoutService","Route","Redirect","signUp","credentials","history","dispatch","then","res","success","localStorage","setItem","token","user_id","push","type","catch","error","loginUser","logoutUser"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,EAAsCC,aAAtC,QAA2D,yBAA3D;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAC/C,SAAQC,QAAD,IAAc;AAEpBR,IAAAA,aAAa,CAACM,WAAD,EAAcC,OAAd,CAAb,CAAoCE,IAApC,CAAyCC,GAAG,IAAI;AAE/C,UAAGA,GAAG,CAACC,OAAP,EAAe;AACdC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,YAAYH,GAAG,CAACI,KAA7C;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,GAAG,CAACK,OAApC;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACAR,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAE,gBAAP;AAAyBP,UAAAA;AAAzB,SAAD,CAAR;AACA,OALD,MAKO;AACNF,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAC,cAAN;AAAsBP,UAAAA;AAAtB,SAAD,CAAR;AACA;AACD,KAVD,EAYEQ,KAZF,CAYQC,KAAK,IAAI;AAChBX,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAC,YAAN;AAAoBE,QAAAA;AAApB,OAAD,CAAR;AACA,KAdD;AAgBA,GAlBD;AAmBA,CApBM;AAuBP,OAAO,MAAMC,SAAS,GAAG,CAACd,WAAD,EAAcC,OAAd,KAA0B;AAClD,SAAQC,QAAD,IAAc;AACpBP,IAAAA,YAAY,CAACK,WAAD,EAAcC,OAAd,CAAZ,CAAmCE,IAAnC,CAAwCC,GAAG,IAAI;AAC9C,UAAGA,GAAG,CAACC,OAAP,EAAe;AACdC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,YAAYH,GAAG,CAACI,KAA7C;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,GAAG,CAACK,OAApC;AACAP,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAE,eAAP;AAAwBP,UAAAA;AAAxB,SAAD,CAAR;AAEaH,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACb,OAND,MAMO;AACNR,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAC,aAAN;AAAqBP,UAAAA;AAArB,SAAD,CAAR;AACA;AACD,KAVD;AAWA,GAZD;AAaA,CAdM;AAgBP,OAAO,MAAMW,UAAU,GAAG,MAAM;AAC/B,SAAQb,QAAD,IAAc;AACpBN,IAAAA,aAAa,GAAGO,IAAhB,CAAqBC,GAAG,IAAI;AAC3B,UAAGA,GAAG,CAACC,OAAP,EAAe;AACdH,QAAAA,QAAQ,CAAC;AAACS,UAAAA,IAAI,EAAE;AAAP,SAAD,CAAR;AACA;AACD,KAJD;AAKA,GAND;AAOA,CARM","sourcesContent":["import { SignUpService, LoginService, LogoutService } from '../services/AuthService';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const signUp = (credentials, history) => {\n\treturn (dispatch) => {\n\n\t\tSignUpService(credentials, history).then(res => {\n\n\t\t\tif(res.success){\n\t\t\t\tlocalStorage.setItem(\"user\", 'Bearer ' + res.token);\n\t\t\t\tlocalStorage.setItem(\"user_id\", res.user_id);\n\t\t\t\thistory.push(\"/\");  \n\t\t\t\tdispatch({type: 'SIGNUP_SUCCESS', res});\n\t\t\t} else {\n\t\t\t\tdispatch({type:'SIGNUP_ERROR', res});\n\t\t\t}\n\t\t}\n\n\t\t).catch(error => {\n\t\t\tdispatch({type:'CODE_ERROR', error})\n\t\t});\n\t\t\n\t}\n}\n\n\nexport const loginUser = (credentials, history) => {\n\treturn (dispatch) => {\n\t\tLoginService(credentials, history).then(res => {\n\t\t\tif(res.success){\n\t\t\t\tlocalStorage.setItem(\"user\", 'Bearer ' + res.token);\n\t\t\t\tlocalStorage.setItem(\"user_id\", res.user_id);\n\t\t\t\tdispatch({type: 'LOGIN_SUCCESS', res});\n\t\t\t\t\n\t                history.push(\"/\");     \n\t\t\t} else {\n\t\t\t\tdispatch({type:'LOGIN_ERROR', res});\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const logoutUser = () => {\n\treturn (dispatch) => {\n\t\tLogoutService().then(res => {\n\t\t\tif(res.success){\n\t\t\t\tdispatch({type: 'LOGOUT_SUCCESS'});   \n\t\t\t} \n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}