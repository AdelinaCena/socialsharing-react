{"ast":null,"code":"class HttpService {\n  constructor() {\n    this.url = \"http://social.local/api/auth\";\n\n    this.postData = async (item, added_url) => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item)\n      };\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(handleResponse).then(user => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('user', JSON.stringify(user));\n        return user;\n      });\n    };\n\n    this.getData = async added_url => {\n      const token = await localStorage.getItem('user');\n      let requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': token,\n          'Content-Type': 'Application/json'\n        }\n      };\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => {\n        response.json();\n      });\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["/var/www/html/socialsharing/src/store/services/HttpService.js"],"names":["HttpService","url","postData","item","added_url","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","localStorage","setItem","getData","token","getItem","response","json"],"mappings":"AACA,MAAMA,WAAN,CAAkB;AAAA;AAAA,SACdC,GADc,GACR,8BADQ;;AAAA,SAGdC,QAHc,GAGH,OAAMC,IAAN,EAAYC,SAAZ,KAA0B;AACpC,YAAMC,cAAc,GAAG;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFO;AAGhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAHU,OAAvB;AAMG,aAAOQ,KAAK,CAAC,KAAKV,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAyBC,cAAzB,CAAL,CACFO,IADE,CACGC,cADH,EAEFD,IAFE,CAEGE,IAAI,IAAI;AACV;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B;AAEA,eAAOA,IAAP;AACP,OAPM,CAAP;AAQH,KAlBa;;AAAA,SAoBdG,OApBc,GAoBJ,MAAMb,SAAN,IAAoB;AAC7B,YAAMc,KAAK,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAApB;AACA,UAAId,cAAc,GAAG;AACpBC,QAAAA,MAAM,EAAE,KADY;AAEpBC,QAAAA,OAAO,EAAC;AACP,2BAAiBW,KADV;AAEP,0BAAgB;AAFT;AAFY,OAArB;AAQA,aAAOP,KAAK,CAAC,KAAKV,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAyBC,cAAzB,CAAL,CAA8CO,IAA9C,CAAmDQ,QAAQ,IAAE;AAACA,QAAAA,QAAQ,CAACC,IAAT;AAAgB,OAA9E,CAAP;AAEA,KAhCa;AAAA;;AAAA;;AAmClB,eAAerB,WAAf","sourcesContent":["\nclass HttpService {\n    url = \"http://social.local/api/auth\";\n\n    postData = async(item, added_url) => {\n    \tconst requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(item)\n        };\n\n        return fetch(this.url+\"/\"+added_url, requestOptions)\n            .then(handleResponse)\n            .then(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n\n                return user;\n        });\n    }\n\n    getData = async(added_url) => {\n    \tconst token = await localStorage.getItem('user');\n    \tlet requestOptions = {\n    \t\tmethod: 'GET',\n    \t\theaders:{\n    \t\t\t'Authorization': token,\n    \t\t\t'Content-Type': 'Application/json',\n    \t\t}\n    \t}\n\n    \treturn fetch(this.url+\"/\"+added_url, requestOptions).then(response=>{response.json()});\n\n    }\n}\n\nexport default HttpService"]},"metadata":{},"sourceType":"module"}