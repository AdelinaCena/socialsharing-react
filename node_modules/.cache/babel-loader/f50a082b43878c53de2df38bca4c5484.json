{"ast":null,"code":"var _jsxFileName = \"/var/www/html/socialsharing/src/pages/post/edit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport ReactDOMServer from 'react-dom/server';\nimport { getPost, updatePost } from '../../store/actions/PostAction';\n\nclass edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      this.props.updatePost(this.state, this.props.match.params.post); // this.props.history.push('/');\n      // this.resetForm();\n    };\n\n    this.resetForm = e => {\n      this.setState({\n        title: '',\n        text: '',\n        media: []\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.dropzoneRef = React.createRef();\n    this.dropzonConfiguration = {\n      djsConfig: {\n        autoProcessQueue: true,\n        dictDefaultMessage: \"Image (Upload here)\",\n        params: {\n          id: 1\n        },\n        previewTemplate: ReactDOMServer.renderToStaticMarkup( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dz-preview dz-file-preview\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dz-details\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          \"data-dz-thumbnail\": \"true\",\n          className: \"img-thumbnail\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dz-filename\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-dz-name\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 54\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dz-progress\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"dz-upload\",\n          \"data-dz-uploadprogress\": \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 50\n          }\n        }))))\n      },\n      componentConfig: {\n        postUrl: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.post);\n  }\n\n  render() {\n    const {\n      post\n    } = this.props.singlePost;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      value: this.state ? this.state.title : post.title,\n      fullWidth: true,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextareaAutosize, {\n      \"aria-label\": \"maximum width\",\n      name: \"text\",\n      label: \"Text\",\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      },\n      rowsMin: \"10\",\n      value: this.state ? this.state.text : post.text,\n      onChange: this.handleChange,\n      placeholder: \"Text here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Update post\"));\n  }\n\n}\n\nconst mapStatesToProps = state => {\n  return {\n    singlePost: state.post.singlePost\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPost: postId => dispatch(getPost(postId)),\n    updatePost: (post, postId) => dispatch(updatePost(post, postId))\n  };\n};\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(edit);","map":{"version":3,"sources":["/var/www/html/socialsharing/src/pages/post/edit.js"],"names":["React","Component","connect","TextField","TextareaAutosize","Button","ReactDOMServer","getPost","updatePost","edit","constructor","props","handleSubmit","e","preventDefault","console","log","state","match","params","post","resetForm","setState","title","text","media","handleChange","target","name","value","dropzoneRef","createRef","dropzonConfiguration","djsConfig","autoProcessQueue","dictDefaultMessage","id","previewTemplate","renderToStaticMarkup","componentConfig","postUrl","componentDidMount","render","singlePost","width","marginTop","mapStatesToProps","mapDispatchToProps","dispatch","postId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { getPost, updatePost } from '../../store/actions/PostAction';\r\n\r\n\r\n\r\nclass edit extends Component {\r\n\r\n    \r\n\tconstructor(props) {\r\n        super(props);\r\n\r\n        this.dropzoneRef = React.createRef();\r\n\r\n        this.dropzonConfiguration = {\r\n            djsConfig : {\r\n                autoProcessQueue: true,\r\n                dictDefaultMessage: \"Image (Upload here)\",\r\n                params: {\r\n                    id: 1,\r\n                },\r\n                previewTemplate: ReactDOMServer.renderToStaticMarkup(\r\n                    <div className=\"dz-preview dz-file-preview\">\r\n                    <div className=\"dz-details\">\r\n                        <img data-dz-thumbnail=\"true\" className=\"img-thumbnail\" />\r\n                        <div className=\"dz-filename\"><span data-dz-name=\"true\"></span></div>\r\n                    </div>\r\n                    <div className=\"dz-progress\"><span className=\"dz-upload\" data-dz-uploadprogress=\"true\"></span></div>\r\n                    </div>\r\n                )\r\n            },\r\n            componentConfig: {\r\n                postUrl: '',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.getPost(this.props.match.params.post);\r\n\t}\r\n    \r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.updatePost(this.state, this.props.match.params.post);\r\n        // this.props.history.push('/');\r\n        // this.resetForm();\r\n    }\r\n    \r\n    resetForm = (e) => {\r\n        this.setState({\r\n            title: '',\r\n            text : '',\r\n            media: []\r\n        })\r\n    }\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name] :e.target.value\r\n\t\t});\r\n\t}\r\n\r\n    render() {\r\n\r\n        const { post } = this.props.singlePost \r\n\r\n\t    return (\r\n            <form noValidate autoComplete=\"off\">\r\n                <TextField \r\n                    id=\"email\" name=\"title\" type=\"text\" \r\n                    label=\"Title\"\r\n                    value={this.state ? this.state.title : post.title} \r\n                    fullWidth \r\n                    onChange={this.handleChange}/>\r\n                <TextareaAutosize \r\n                        aria-label=\"maximum width\" \r\n                        name=\"text\" \r\n                        label=\"Text\"\r\n                        style={{width: '100%', marginTop:'10px'}}\r\n                        rowsMin=\"10\"\r\n                        value={this.state ? this.state.text : post.text}\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Text here\" />\r\n                \r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n                    Update post\r\n                </Button>\r\n            </form>\r\n        );\r\n\t}\r\n\r\n}\r\n\r\nconst mapStatesToProps = (state) => {\r\n\treturn {\r\n        singlePost : state.post.singlePost\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n        getPost:(postId) => dispatch(getPost(postId)),\r\n        updatePost:(post, postId) => dispatch(updatePost(post, postId))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStatesToProps, mapDispatchToProps)(edit)"]},"metadata":{},"sourceType":"module"}